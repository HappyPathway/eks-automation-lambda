name: Initialize Cluster Configuration

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    if: github.head_ref == 'init-cluster'
    outputs:
      aws_account: ${{ steps.get-account.outputs.aws_account }}
      environment: ${{ steps.get-account.outputs.environment }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Get AWS account from config
        id: get-account
        run: |
          AWS_ACCOUNT=$(jq -r '.aws_account' config.json)
          ENVIRONMENT=$(jq -r '.environment' config.json)
          echo "aws_account=${AWS_ACCOUNT}" >> $GITHUB_OUTPUT
          echo "environment=${ENVIRONMENT}" >> $GITHUB_OUTPUT

  terraform-plan:
    needs: [ determine-environment ]
    runs-on: [ "${{ needs.determine-environment.outputs.aws_account }}" ]
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.9.1
          terraform_wrapper: false
          
      - name: Setup Terragrunt
        run: |
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.0/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ needs.determine-environment.outputs.aws_account }}:role/GitHubActionsRole
          aws-region: us-east-1
      
      - name: Terragrunt Plan
        working-directory: environment/region/vpc/cluster
        run: |
          terragrunt init
          terragrunt plan -no-color -out=tfplan 2>&1 | tee plan.txt
          
      - name: Comment Plan on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('environment/region/vpc/cluster/plan.txt', 'utf8');
            const comment = `### Terraform Plan Results
            \`\`\`
            ${plan}
            \`\`\`
            `;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
